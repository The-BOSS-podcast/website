// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: sx3ERcdAG6itf9PoNvoQTY
// Component: bBxIZnMVjAi
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import SectionHeading from "../../SectionHeading"; // plasmic-import: 9cHukr1vk4/component

import { useScreenVariants as useScreenVariantsjp7EaCu1Pi8YJ } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: Jp7eaCu1Pi8yJ/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_the_boss_web_s.module.css"; // plasmic-import: sx3ERcdAG6itf9PoNvoQTY/projectcss
import sty from "./PlasmicHomeBlog4.module.css"; // plasmic-import: bBxIZnMVjAi/css

export type PlasmicHomeBlog4__VariantMembers = {};

export type PlasmicHomeBlog4__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomeBlog4__VariantsArgs;
export const PlasmicHomeBlog4__VariantProps = new Array<VariantPropType>();

export type PlasmicHomeBlog4__ArgsType = {};
type ArgPropType = keyof PlasmicHomeBlog4__ArgsType;
export const PlasmicHomeBlog4__ArgProps = new Array<ArgPropType>();

export type PlasmicHomeBlog4__OverridesType = {
  root?: p.Flex<"div">;
  sectionHeading?: p.Flex<typeof SectionHeading>;
  siteContainer?: p.Flex<"div">;
  frame322?: p.Flex<"div">;
  frame212?: p.Flex<"div">;
  frame200?: p.Flex<"div">;
  rectangle41?: p.Flex<"div">;
  frame206?: p.Flex<"div">;
  frame228?: p.Flex<"div">;
  frame194?: p.Flex<"div">;
  frame188?: p.Flex<"div">;
  frame197?: p.Flex<"div">;
  rectangle40?: p.Flex<"div">;
  frame205?: p.Flex<"div">;
  frame198?: p.Flex<"div">;
  frame195?: p.Flex<"div">;
  frame196?: p.Flex<"div">;
  frame199?: p.Flex<"div">;
  frame323?: p.Flex<"div">;
  frame211?: p.Flex<"div">;
  frame213?: p.Flex<"div">;
  rectangle42?: p.Flex<"div">;
  frame207?: p.Flex<"div">;
  frame201?: p.Flex<"div">;
  frame229?: p.Flex<"div">;
  frame208?: p.Flex<"div">;
  frame214?: p.Flex<"div">;
  rectangle43?: p.Flex<"div">;
  frame209?: p.Flex<"div">;
  frame202?: p.Flex<"div">;
  frame230?: p.Flex<"div">;
  frame12?: p.Flex<"div">;
  frame324?: p.Flex<"div">;
  frame14?: p.Flex<"div">;
  frame325?: p.Flex<"div">;
  frame13?: p.Flex<"div">;
  frame326?: p.Flex<"div">;
  btnCtaPrimary3?: p.Flex<"a"> & Partial<LinkProps>;
};

export interface DefaultHomeBlog4Props {
  className?: string;
}

export const defaultHomeBlog4__Args: Partial<PlasmicHomeBlog4__ArgsType> = {};

function PlasmicHomeBlog4__RenderFunc(props: {
  variants: PlasmicHomeBlog4__VariantsArgs;
  args: PlasmicHomeBlog4__ArgsType;
  overrides: PlasmicHomeBlog4__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;
  const args = Object.assign({}, defaultHomeBlog4__Args, props.args);
  const $props = args;
  const $ctx = ph.useDataEnv?.() || {};

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsjp7EaCu1Pi8YJ()
  });

  return (
    <p.Stack
      as={"div"}
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        sty.root
      )}
    >
      <SectionHeading
        data-plasmic-name={"sectionHeading"}
        data-plasmic-override={overrides.sectionHeading}
        className={classNames("__wab_instance", sty.sectionHeading)}
      >
        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text__ltdFk
          )}
        >
          {"Our Content House"}
        </div>
      </SectionHeading>

      <div
        data-plasmic-name={"siteContainer"}
        data-plasmic-override={overrides.siteContainer}
        className={classNames(projectcss.all, sty.siteContainer)}
      >
        <p.Stack
          as={"div"}
          data-plasmic-name={"frame322"}
          data-plasmic-override={overrides.frame322}
          hasGap={true}
          className={classNames(projectcss.all, sty.frame322)}
        >
          {(
            hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
          ) ? (
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___2MeAw)}
            >
              <div
                data-plasmic-name={"frame212"}
                data-plasmic-override={overrides.frame212}
                className={classNames(projectcss.all, sty.frame212)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__gXFvS
                  )}
                >
                  {
                    "A Young Entrepreneur Turning Dreams Into Reality With Plus1 ..."
                  }
                </div>

                <div
                  data-plasmic-name={"frame200"}
                  data-plasmic-override={overrides.frame200}
                  className={classNames(projectcss.all, sty.frame200)}
                >
                  <div
                    data-plasmic-name={"rectangle41"}
                    data-plasmic-override={overrides.rectangle41}
                    className={classNames(projectcss.all, sty.rectangle41)}
                  />

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame206"}
                    data-plasmic-override={overrides.frame206}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame206)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__g68Tt)}
                      displayHeight={"16px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"16px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/the_boss_web_s/images/blog.svg",
                        fullWidth: 16,
                        fullHeight: 16,
                        aspectRatio: 1
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qsteT
                      )}
                    >
                      {"Feature article"}
                    </div>
                  </p.Stack>
                </div>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame228"}
                  data-plasmic-override={overrides.frame228}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame228)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___2328A)}
                    displayHeight={"18px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"18px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/the_boss_web_s/images/clock.svg",
                      fullWidth: 18,
                      fullHeight: 18,
                      aspectRatio: 1
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__gjCdl
                    )}
                  >
                    {"4min"}
                  </div>
                </p.Stack>

                <div
                  data-plasmic-name={"frame194"}
                  data-plasmic-override={overrides.frame194}
                  className={classNames(projectcss.all, sty.frame194)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ky2An
                    )}
                  >
                    {"3 weeks ago"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___7AOfB
                    )}
                  >
                    {"Arushi Singh"}
                  </div>
                </div>
              </div>

              <div
                data-plasmic-name={"frame188"}
                data-plasmic-override={overrides.frame188}
                className={classNames(projectcss.all, sty.frame188)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__dKaS4
                  )}
                >
                  {
                    "Kickstarting Asia’s Largest Organic E-Marketplace, Abhijit and Neha are Helping Consum..."
                  }
                </div>

                <div
                  data-plasmic-name={"frame197"}
                  data-plasmic-override={overrides.frame197}
                  className={classNames(projectcss.all, sty.frame197)}
                >
                  <div
                    data-plasmic-name={"rectangle40"}
                    data-plasmic-override={overrides.rectangle40}
                    className={classNames(projectcss.all, sty.rectangle40)}
                  />

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame205"}
                    data-plasmic-override={overrides.frame205}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame205)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__wKsbP)}
                      displayHeight={"16px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"16px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/the_boss_web_s/images/microphone.svg",
                        fullWidth: 16,
                        fullHeight: 16,
                        aspectRatio: 1
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__xy77L
                      )}
                    >
                      {"Podcast story"}
                    </div>
                  </p.Stack>
                </div>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame198"}
                  data-plasmic-override={overrides.frame198}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame198)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame195"}
                    data-plasmic-override={overrides.frame195}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame195)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__avJjs
                      )}
                    >
                      {"Retail"}
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame196"}
                    data-plasmic-override={overrides.frame196}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame196)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___8DQa
                      )}
                    >
                      {"e-commerce"}
                    </div>
                  </p.Stack>
                </p.Stack>

                <div
                  data-plasmic-name={"frame199"}
                  data-plasmic-override={overrides.frame199}
                  className={classNames(projectcss.all, sty.frame199)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__u2PQu
                    )}
                  >
                    {"3 days ago"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__fP8Gk
                    )}
                  >
                    {"Parul Sharma"}
                  </div>
                </div>
              </div>
            </p.Stack>
          ) : null}

          <p.Stack
            as={"div"}
            data-plasmic-name={"frame323"}
            data-plasmic-override={overrides.frame323}
            hasGap={true}
            className={classNames(projectcss.all, sty.frame323)}
          >
            <div
              data-plasmic-name={"frame211"}
              data-plasmic-override={overrides.frame211}
              className={classNames(projectcss.all, sty.frame211)}
            >
              <div
                data-plasmic-name={"frame213"}
                data-plasmic-override={overrides.frame213}
                className={classNames(projectcss.all, sty.frame213)}
              >
                <div
                  data-plasmic-name={"rectangle42"}
                  data-plasmic-override={overrides.rectangle42}
                  className={classNames(projectcss.all, sty.rectangle42)}
                />

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame207"}
                  data-plasmic-override={overrides.frame207}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame207)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__xHtxo)}
                    displayHeight={"16px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"16px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/the_boss_web_s/images/newspaper.svg",
                      fullWidth: 16,
                      fullHeight: 16,
                      aspectRatio: 1
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__obhhl
                    )}
                  >
                    {"PodBlog"}
                  </div>
                </p.Stack>
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__oywcz
                )}
              >
                {
                  "What are Podcast Directories and How To Get Listed On Spotify And Apple ..."
                }
              </div>

              <div
                data-plasmic-name={"frame201"}
                data-plasmic-override={overrides.frame201}
                className={classNames(projectcss.all, sty.frame201)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__mIavj
                  )}
                >
                  {"1 month ago"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___5CZEo
                  )}
                >
                  {"Tarika Chavali"}
                </div>
              </div>

              <p.Stack
                as={"div"}
                data-plasmic-name={"frame229"}
                data-plasmic-override={overrides.frame229}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame229)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___36Nj)}
                  displayHeight={"18px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"18px" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/the_boss_web_s/images/clock.svg",
                    fullWidth: 18,
                    fullHeight: 18,
                    aspectRatio: 1
                  }}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__fckb4
                  )}
                >
                  {"4min"}
                </div>
              </p.Stack>
            </div>

            <div
              data-plasmic-name={"frame208"}
              data-plasmic-override={overrides.frame208}
              className={classNames(projectcss.all, sty.frame208)}
            >
              <div
                data-plasmic-name={"frame214"}
                data-plasmic-override={overrides.frame214}
                className={classNames(projectcss.all, sty.frame214)}
              >
                <div
                  data-plasmic-name={"rectangle43"}
                  data-plasmic-override={overrides.rectangle43}
                  className={classNames(projectcss.all, sty.rectangle43)}
                />

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame209"}
                  data-plasmic-override={overrides.frame209}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame209)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___0PRq)}
                    displayHeight={"16px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"16px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/the_boss_web_s/images/newspaper.svg",
                      fullWidth: 16,
                      fullHeight: 16,
                      aspectRatio: 1
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__p9RHd
                    )}
                  >
                    {"PodBlog"}
                  </div>
                </p.Stack>
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__lBfPp
                )}
              >
                {"Are Podcasts Set to Rule the World?"}
              </div>

              <div
                data-plasmic-name={"frame202"}
                data-plasmic-override={overrides.frame202}
                className={classNames(projectcss.all, sty.frame202)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__aChop
                  )}
                >
                  {"1 month ago"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__jNds
                  )}
                >
                  {"Tarika Chavali"}
                </div>
              </div>

              <p.Stack
                as={"div"}
                data-plasmic-name={"frame230"}
                data-plasmic-override={overrides.frame230}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame230)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__s3UxL)}
                  displayHeight={"18px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"18px" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/the_boss_web_s/images/clock.svg",
                    fullWidth: 18,
                    fullHeight: 18,
                    aspectRatio: 1
                  }}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__oLdqj
                  )}
                >
                  {"4min"}
                </div>
              </p.Stack>
            </div>
          </p.Stack>
        </p.Stack>
      </div>

      {true ? (
        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__fAgtt)}
        >
          {true ? (
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__kWNv)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__yYRe
                )}
              >
                {"CONTENT MICROSITE"}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__p8KEt
                )}
              >
                {
                  "Explore the unheard and unknown stories on The BOSS content house"
                }
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___9Bja0
                )}
              >
                {
                  "The microsite hosts barrels of knowledge juice in the form of Podcast stories, Feature articles and PodBlogs!"
                }
              </div>
            </p.Stack>
          ) : null}
          {true ? (
            <div className={classNames(projectcss.all, sty.freeBox__hOg5)}>
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___9BihN)}
                >
                  <div
                    data-plasmic-name={"frame12"}
                    data-plasmic-override={overrides.frame12}
                    className={classNames(projectcss.all, sty.frame12)}
                  >
                    <div
                      data-plasmic-name={"frame324"}
                      data-plasmic-override={overrides.frame324}
                      className={classNames(projectcss.all, sty.frame324)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__udpV)}
                        displayHeight={"36px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"36px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/the_boss_web_s/images/microphone2.svg",
                          fullWidth: 36,
                          fullHeight: 36,
                          aspectRatio: 1
                        }}
                      />
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__md22H
                      )}
                    >
                      {
                        "Detailed summary of episodes\nalong with audio snippets"
                      }
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__adk3S
                      )}
                    >
                      {"Podcast Stories"}
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"frame14"}
                    data-plasmic-override={overrides.frame14}
                    className={classNames(projectcss.all, sty.frame14)}
                  >
                    <div
                      data-plasmic-name={"frame325"}
                      data-plasmic-override={overrides.frame325}
                      className={classNames(projectcss.all, sty.frame325)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img___5Tz2V)}
                        displayHeight={"36px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"36px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/the_boss_web_s/images/newspaper2.svg",
                          fullWidth: 36,
                          fullHeight: 36,
                          aspectRatio: 1
                        }}
                      />
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lchHg
                      )}
                    >
                      {"Podcast-related blogs aimed at\nspeading awareness"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__a9Fi2
                      )}
                    >
                      {"PodBlogs"}
                    </div>
                  </div>
                </p.Stack>
              ) : null}
              {true ? (
                <div
                  className={classNames(projectcss.all, sty.freeBox___2IpOj)}
                >
                  <div
                    data-plasmic-name={"frame13"}
                    data-plasmic-override={overrides.frame13}
                    className={classNames(projectcss.all, sty.frame13)}
                  >
                    <div
                      data-plasmic-name={"frame326"}
                      data-plasmic-override={overrides.frame326}
                      className={classNames(projectcss.all, sty.frame326)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__clt6P)}
                        displayHeight={"36px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"36px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/the_boss_web_s/images/blog2.svg",
                          fullWidth: 36,
                          fullHeight: 36,
                          aspectRatio: 1
                        }}
                      />
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__itGsl
                      )}
                    >
                      {
                        "Articles featuring valuable insights\ninto business journeys"
                      }
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__bfMVj
                      )}
                    >
                      {"Feature Articles"}
                    </div>
                  </div>
                </div>
              ) : null}
            </div>
          ) : null}
        </p.Stack>
      ) : null}

      <p.Stack
        as={p.PlasmicLink}
        data-plasmic-name={"btnCtaPrimary3"}
        data-plasmic-override={overrides.btnCtaPrimary3}
        hasGap={true}
        className={classNames(projectcss.all, projectcss.a, sty.btnCtaPrimary3)}
        component={Link}
        href={"https://contenthouse.ballsofsteelshow.com" as const}
        platform={"nextjs"}
      >
        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text__cmKil
          )}
        >
          {"Visit Content House"}
        </div>
      </p.Stack>
    </p.Stack>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "sectionHeading",
    "siteContainer",
    "frame322",
    "frame212",
    "frame200",
    "rectangle41",
    "frame206",
    "frame228",
    "frame194",
    "frame188",
    "frame197",
    "rectangle40",
    "frame205",
    "frame198",
    "frame195",
    "frame196",
    "frame199",
    "frame323",
    "frame211",
    "frame213",
    "rectangle42",
    "frame207",
    "frame201",
    "frame229",
    "frame208",
    "frame214",
    "rectangle43",
    "frame209",
    "frame202",
    "frame230",
    "frame12",
    "frame324",
    "frame14",
    "frame325",
    "frame13",
    "frame326",
    "btnCtaPrimary3"
  ],
  sectionHeading: ["sectionHeading"],
  siteContainer: [
    "siteContainer",
    "frame322",
    "frame212",
    "frame200",
    "rectangle41",
    "frame206",
    "frame228",
    "frame194",
    "frame188",
    "frame197",
    "rectangle40",
    "frame205",
    "frame198",
    "frame195",
    "frame196",
    "frame199",
    "frame323",
    "frame211",
    "frame213",
    "rectangle42",
    "frame207",
    "frame201",
    "frame229",
    "frame208",
    "frame214",
    "rectangle43",
    "frame209",
    "frame202",
    "frame230"
  ],
  frame322: [
    "frame322",
    "frame212",
    "frame200",
    "rectangle41",
    "frame206",
    "frame228",
    "frame194",
    "frame188",
    "frame197",
    "rectangle40",
    "frame205",
    "frame198",
    "frame195",
    "frame196",
    "frame199",
    "frame323",
    "frame211",
    "frame213",
    "rectangle42",
    "frame207",
    "frame201",
    "frame229",
    "frame208",
    "frame214",
    "rectangle43",
    "frame209",
    "frame202",
    "frame230"
  ],
  frame212: [
    "frame212",
    "frame200",
    "rectangle41",
    "frame206",
    "frame228",
    "frame194"
  ],
  frame200: ["frame200", "rectangle41", "frame206"],
  rectangle41: ["rectangle41"],
  frame206: ["frame206"],
  frame228: ["frame228"],
  frame194: ["frame194"],
  frame188: [
    "frame188",
    "frame197",
    "rectangle40",
    "frame205",
    "frame198",
    "frame195",
    "frame196",
    "frame199"
  ],
  frame197: ["frame197", "rectangle40", "frame205"],
  rectangle40: ["rectangle40"],
  frame205: ["frame205"],
  frame198: ["frame198", "frame195", "frame196"],
  frame195: ["frame195"],
  frame196: ["frame196"],
  frame199: ["frame199"],
  frame323: [
    "frame323",
    "frame211",
    "frame213",
    "rectangle42",
    "frame207",
    "frame201",
    "frame229",
    "frame208",
    "frame214",
    "rectangle43",
    "frame209",
    "frame202",
    "frame230"
  ],
  frame211: [
    "frame211",
    "frame213",
    "rectangle42",
    "frame207",
    "frame201",
    "frame229"
  ],
  frame213: ["frame213", "rectangle42", "frame207"],
  rectangle42: ["rectangle42"],
  frame207: ["frame207"],
  frame201: ["frame201"],
  frame229: ["frame229"],
  frame208: [
    "frame208",
    "frame214",
    "rectangle43",
    "frame209",
    "frame202",
    "frame230"
  ],
  frame214: ["frame214", "rectangle43", "frame209"],
  rectangle43: ["rectangle43"],
  frame209: ["frame209"],
  frame202: ["frame202"],
  frame230: ["frame230"],
  frame12: ["frame12", "frame324"],
  frame324: ["frame324"],
  frame14: ["frame14", "frame325"],
  frame325: ["frame325"],
  frame13: ["frame13", "frame326"],
  frame326: ["frame326"],
  btnCtaPrimary3: ["btnCtaPrimary3"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  sectionHeading: typeof SectionHeading;
  siteContainer: "div";
  frame322: "div";
  frame212: "div";
  frame200: "div";
  rectangle41: "div";
  frame206: "div";
  frame228: "div";
  frame194: "div";
  frame188: "div";
  frame197: "div";
  rectangle40: "div";
  frame205: "div";
  frame198: "div";
  frame195: "div";
  frame196: "div";
  frame199: "div";
  frame323: "div";
  frame211: "div";
  frame213: "div";
  rectangle42: "div";
  frame207: "div";
  frame201: "div";
  frame229: "div";
  frame208: "div";
  frame214: "div";
  rectangle43: "div";
  frame209: "div";
  frame202: "div";
  frame230: "div";
  frame12: "div";
  frame324: "div";
  frame14: "div";
  frame325: "div";
  frame13: "div";
  frame326: "div";
  btnCtaPrimary3: "a";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomeBlog4__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomeBlog4__VariantsArgs;
    args?: PlasmicHomeBlog4__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomeBlog4__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicHomeBlog4__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHomeBlog4__ArgProps,
      internalVariantPropNames: PlasmicHomeBlog4__VariantProps
    });

    return PlasmicHomeBlog4__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomeBlog4";
  } else {
    func.displayName = `PlasmicHomeBlog4.${nodeName}`;
  }
  return func;
}

export const PlasmicHomeBlog4 = Object.assign(
  // Top-level PlasmicHomeBlog4 renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    sectionHeading: makeNodeComponent("sectionHeading"),
    siteContainer: makeNodeComponent("siteContainer"),
    frame322: makeNodeComponent("frame322"),
    frame212: makeNodeComponent("frame212"),
    frame200: makeNodeComponent("frame200"),
    rectangle41: makeNodeComponent("rectangle41"),
    frame206: makeNodeComponent("frame206"),
    frame228: makeNodeComponent("frame228"),
    frame194: makeNodeComponent("frame194"),
    frame188: makeNodeComponent("frame188"),
    frame197: makeNodeComponent("frame197"),
    rectangle40: makeNodeComponent("rectangle40"),
    frame205: makeNodeComponent("frame205"),
    frame198: makeNodeComponent("frame198"),
    frame195: makeNodeComponent("frame195"),
    frame196: makeNodeComponent("frame196"),
    frame199: makeNodeComponent("frame199"),
    frame323: makeNodeComponent("frame323"),
    frame211: makeNodeComponent("frame211"),
    frame213: makeNodeComponent("frame213"),
    rectangle42: makeNodeComponent("rectangle42"),
    frame207: makeNodeComponent("frame207"),
    frame201: makeNodeComponent("frame201"),
    frame229: makeNodeComponent("frame229"),
    frame208: makeNodeComponent("frame208"),
    frame214: makeNodeComponent("frame214"),
    rectangle43: makeNodeComponent("rectangle43"),
    frame209: makeNodeComponent("frame209"),
    frame202: makeNodeComponent("frame202"),
    frame230: makeNodeComponent("frame230"),
    frame12: makeNodeComponent("frame12"),
    frame324: makeNodeComponent("frame324"),
    frame14: makeNodeComponent("frame14"),
    frame325: makeNodeComponent("frame325"),
    frame13: makeNodeComponent("frame13"),
    frame326: makeNodeComponent("frame326"),
    btnCtaPrimary3: makeNodeComponent("btnCtaPrimary3"),

    // Metadata about props expected for PlasmicHomeBlog4
    internalVariantProps: PlasmicHomeBlog4__VariantProps,
    internalArgProps: PlasmicHomeBlog4__ArgProps
  }
);

export default PlasmicHomeBlog4;
/* prettier-ignore-end */
