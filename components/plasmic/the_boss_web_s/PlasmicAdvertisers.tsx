// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: sx3ERcdAG6itf9PoNvoQTY
// Component: UJfjFRFdBj
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import NavBarRes from "../../NavBarRes"; // plasmic-import: hi-mET-ngC/component
import AdvSplash1 from "../../AdvSplash1"; // plasmic-import: AQlk9iey1p/component
import AdvVideo2 from "../../AdvVideo2"; // plasmic-import: BQyn0S0v37a/component
import AdvComparision3 from "../../AdvComparision3"; // plasmic-import: iitORHJvPNl/component
import AdvCallout4 from "../../AdvCallout4"; // plasmic-import: N7nf-2FNTT/component
import AdvOnboard5 from "../../AdvOnboard5"; // plasmic-import: XtniKcAigz7/component
import AdvBossServices6 from "../../AdvBossServices6"; // plasmic-import: OtHg8lnc482/component
import AdvPodPlat7 from "../../AdvPodPlat7"; // plasmic-import: z18WjvWRZTl/component
import AdvForm8 from "../../AdvForm8"; // plasmic-import: qTtDsUanQha/component
import FooterComDesk from "../../FooterComDesk"; // plasmic-import: H9tCPDoO68/component

import { useScreenVariants as useScreenVariantsjp7EaCu1Pi8YJ } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: Jp7eaCu1Pi8yJ/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_the_boss_web_s.module.css"; // plasmic-import: sx3ERcdAG6itf9PoNvoQTY/projectcss
import sty from "./PlasmicAdvertisers.module.css"; // plasmic-import: UJfjFRFdBj/css

export type PlasmicAdvertisers__VariantMembers = {};

export type PlasmicAdvertisers__VariantsArgs = {};
type VariantPropType = keyof PlasmicAdvertisers__VariantsArgs;
export const PlasmicAdvertisers__VariantProps = new Array<VariantPropType>();

export type PlasmicAdvertisers__ArgsType = {};
type ArgPropType = keyof PlasmicAdvertisers__ArgsType;
export const PlasmicAdvertisers__ArgProps = new Array<ArgPropType>();

export type PlasmicAdvertisers__OverridesType = {
  root?: p.Flex<"div">;
  navBarRes?: p.Flex<typeof NavBarRes>;
  advertisersApproved?: p.Flex<"div">;
  advSplash1?: p.Flex<typeof AdvSplash1>;
  advVideo2?: p.Flex<typeof AdvVideo2>;
  advComparision3?: p.Flex<typeof AdvComparision3>;
  advCallout4?: p.Flex<typeof AdvCallout4>;
  advOnboard5?: p.Flex<typeof AdvOnboard5>;
  advBossServices6?: p.Flex<typeof AdvBossServices6>;
  advPodPlat7?: p.Flex<typeof AdvPodPlat7>;
  advForm8?: p.Flex<typeof AdvForm8>;
  footerComDesk?: p.Flex<typeof FooterComDesk>;
};

export interface DefaultAdvertisersProps {}

export const defaultAdvertisers__Args: Partial<PlasmicAdvertisers__ArgsType> =
  {};

function PlasmicAdvertisers__RenderFunc(props: {
  variants: PlasmicAdvertisers__VariantsArgs;
  args: PlasmicAdvertisers__ArgsType;
  overrides: PlasmicAdvertisers__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;
  const args = Object.assign({}, defaultAdvertisers__Args, props.args);
  const $props = args;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsjp7EaCu1Pi8YJ()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{"Advertisers"}</title>
        <meta key="og:title" property="og:title" content={"Advertisers"} />
        <meta
          key="description"
          property="og:description"
          name="description"
          content={
            "The BOSS Media connects advertisers to podcasters and helps brands to advertise on Indiaâ€™s best podcasts"
          }
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <NavBarRes
            data-plasmic-name={"navBarRes"}
            data-plasmic-override={overrides.navBarRes}
            className={classNames("__wab_instance", sty.navBarRes)}
          />

          {(
            hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
          ) ? (
            <div
              data-plasmic-name={"advertisersApproved"}
              data-plasmic-override={overrides.advertisersApproved}
              className={classNames(projectcss.all, sty.advertisersApproved)}
            >
              <AdvSplash1
                data-plasmic-name={"advSplash1"}
                data-plasmic-override={overrides.advSplash1}
                className={classNames("__wab_instance", sty.advSplash1)}
              />

              <AdvVideo2
                data-plasmic-name={"advVideo2"}
                data-plasmic-override={overrides.advVideo2}
                className={classNames("__wab_instance", sty.advVideo2)}
              />

              <AdvComparision3
                data-plasmic-name={"advComparision3"}
                data-plasmic-override={overrides.advComparision3}
                className={classNames("__wab_instance", sty.advComparision3)}
              />

              <AdvCallout4
                data-plasmic-name={"advCallout4"}
                data-plasmic-override={overrides.advCallout4}
                className={classNames("__wab_instance", sty.advCallout4)}
              />

              <AdvOnboard5
                data-plasmic-name={"advOnboard5"}
                data-plasmic-override={overrides.advOnboard5}
                className={classNames("__wab_instance", sty.advOnboard5)}
              />

              <AdvBossServices6
                data-plasmic-name={"advBossServices6"}
                data-plasmic-override={overrides.advBossServices6}
                className={classNames("__wab_instance", sty.advBossServices6)}
              />

              <AdvPodPlat7
                data-plasmic-name={"advPodPlat7"}
                data-plasmic-override={overrides.advPodPlat7}
                className={classNames("__wab_instance", sty.advPodPlat7)}
              />

              <AdvForm8
                data-plasmic-name={"advForm8"}
                data-plasmic-override={overrides.advForm8}
                className={classNames("__wab_instance", sty.advForm8)}
              />
            </div>
          ) : null}

          <FooterComDesk
            data-plasmic-name={"footerComDesk"}
            data-plasmic-override={overrides.footerComDesk}
            className={classNames("__wab_instance", sty.footerComDesk)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "navBarRes",
    "advertisersApproved",
    "advSplash1",
    "advVideo2",
    "advComparision3",
    "advCallout4",
    "advOnboard5",
    "advBossServices6",
    "advPodPlat7",
    "advForm8",
    "footerComDesk"
  ],
  navBarRes: ["navBarRes"],
  advertisersApproved: [
    "advertisersApproved",
    "advSplash1",
    "advVideo2",
    "advComparision3",
    "advCallout4",
    "advOnboard5",
    "advBossServices6",
    "advPodPlat7",
    "advForm8"
  ],
  advSplash1: ["advSplash1"],
  advVideo2: ["advVideo2"],
  advComparision3: ["advComparision3"],
  advCallout4: ["advCallout4"],
  advOnboard5: ["advOnboard5"],
  advBossServices6: ["advBossServices6"],
  advPodPlat7: ["advPodPlat7"],
  advForm8: ["advForm8"],
  footerComDesk: ["footerComDesk"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  navBarRes: typeof NavBarRes;
  advertisersApproved: "div";
  advSplash1: typeof AdvSplash1;
  advVideo2: typeof AdvVideo2;
  advComparision3: typeof AdvComparision3;
  advCallout4: typeof AdvCallout4;
  advOnboard5: typeof AdvOnboard5;
  advBossServices6: typeof AdvBossServices6;
  advPodPlat7: typeof AdvPodPlat7;
  advForm8: typeof AdvForm8;
  footerComDesk: typeof FooterComDesk;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicAdvertisers__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicAdvertisers__VariantsArgs;
    args?: PlasmicAdvertisers__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicAdvertisers__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicAdvertisers__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicAdvertisers__ArgProps,
      internalVariantPropNames: PlasmicAdvertisers__VariantProps
    });

    return PlasmicAdvertisers__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicAdvertisers";
  } else {
    func.displayName = `PlasmicAdvertisers.${nodeName}`;
  }
  return func;
}

export const PlasmicAdvertisers = Object.assign(
  // Top-level PlasmicAdvertisers renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navBarRes: makeNodeComponent("navBarRes"),
    advertisersApproved: makeNodeComponent("advertisersApproved"),
    advSplash1: makeNodeComponent("advSplash1"),
    advVideo2: makeNodeComponent("advVideo2"),
    advComparision3: makeNodeComponent("advComparision3"),
    advCallout4: makeNodeComponent("advCallout4"),
    advOnboard5: makeNodeComponent("advOnboard5"),
    advBossServices6: makeNodeComponent("advBossServices6"),
    advPodPlat7: makeNodeComponent("advPodPlat7"),
    advForm8: makeNodeComponent("advForm8"),
    footerComDesk: makeNodeComponent("footerComDesk"),

    // Metadata about props expected for PlasmicAdvertisers
    internalVariantProps: PlasmicAdvertisers__VariantProps,
    internalArgProps: PlasmicAdvertisers__ArgProps
  }
);

export default PlasmicAdvertisers;
/* prettier-ignore-end */
